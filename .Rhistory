close.screen(a=T)
split.screen(c(1,2))
screen(1)
plot(1:10)
close.screen(2)
plot(1:4)
close.screen(1)
split.screen()
split.screen(c(1,2))
screen(1)
plot(1:10)
close.screen(1)
split.screen()
screen(1)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
plot(1:10)
plot(1:4)
plot(1:10)
close.screen(2)
plot(1:4)
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
split.screen(c(1,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
close.screen(2)
split.screen
split.screen()
split.screen(c(1,2))
split.screen()
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
library(cf)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
split.screen(c(1,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
screen(2)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
close.screen(2)
split.screen(c(2,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
screen(2)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
close.screen(2)
split.screen()
close.screen(a=T)
split.screen()
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
library(cf)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
split.screen()
library(cf)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Func check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, title="Title check")
split.screen(c(2,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
screen(2)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
close.screen(2)
close.screen(all=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, title="Title check")
source('C:/Users/cbe117/School/DOE/Codes/contour/R/examples.R', echo=TRUE)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
plot(1:10)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
screen()
split.screen()
screen1
screen2
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
plot(1:10)
split.screen()
screen()
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
split.screen()
screen()
split.screen(c(1,2))
screen(1)
plot(1:10)
close.screen(1)
close.screen(a=T)
split.screen(c(1,2))
screen(1)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana)
screen()
split.screen()
bar
par()
?screen
screen()
split.screen(c(1,2))
screen(1)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
close.screen(1)
close.screen(2)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
close.screen(1)
screen(2)
plot(1:4)
close.screen(2)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=F)
close.screen(1)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=F)
plot(1:10)
close.screen(1)
close.screen(2)
split.screen()
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=F)
screen()
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(a=T)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
close.screen(a=T)
split.screen()
split.screen(1)
split.screen(matrix(c(0,1,0,1),ncol=4))
hist(runif(80))
screen()
close.screen(1)
split.screen()
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, title="Title check")
split.screen(c(2,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
screen(2)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
close.screen(2)
close.screen(all=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, mainminmax = F)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, mainminmax = T)
!T
library(cf)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, title="Title check")
split.screen(c(2,2))
screen(1)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
close.screen(1)
screen(2)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
close.screen(2)
close.screen(all=T)
library(cf)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
close.screen(all=T)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
plot(1:4)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
close.screen(all=T)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = T)
library(cf)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=F, mainminmax = T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=F, mainminmax = F)
library(cf)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=F, mainminmax = T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=F, mainminmax = F)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = F)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = T)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
plot(1:4)
cf::cf(TestFunctions::branin, bar=F)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
screen()
close.screen(all=T)
split.screen(c(1,2))
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
screen()
close.screen(all=T)
screen(c(1,3))
split.screen(c(1,3))
screen(2)
hist(rnorm(20))
close.screen(2)
screen()
close.screen(all=T)
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
close.screen(all=T)
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
screen()
close.screen(all=T)
screen()
close.screen
close.screen(all=T)
close.screen(all=T)
split.screen(c(1,3))
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
screen()
close.screen(all=T)
library(cf)
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
screen()
cf::cf(TestFunctions::banana,bar=T)
split.screen()
close.screen(all=T)
a <- b <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(a^2, b^2, "+"))
cf_grid3(cos(r^2)*exp(-r/(2*pi)))
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T)
cf_grid3(cos(r^2)*exp(-r/(2*pi)), bar=T, mainminmax = T)
x <- runif(20)
y <- runif(20)
z <- exp(-(x-.5)^2-5*(y-.5)^2)# + rnorm(20,0,.05)
cf_data(x,y,z)
cf_data(x,y,z, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))})
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T)
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, title="Title check")
cf_func(function(xx){exp(-sum((xx-.5)^2/.1))}, bar=T, main="Title check")
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
screen()
library(cf)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
screen()
split.screen()
screen1
start.screen.number
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
start.screen.number
screen()
split.screen()
split.screen()
screen()
screen()
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
library(cf)
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
close.screen(all=T)
hist(rnorm(70))
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
close.screen(all=T)
hist(rnorm(70))
split.screen(c(1,2))
screen(1)
cf::cf(TestFunctions::banana,bar=T)
plot(1:10)
screen(2)
cf::cf(TestFunctions::branin, bar=F, mainminmax=F)
close.screen(2)
hist(runif(10))
close.screen(1)
hist(rnorm(70))
split.screen()
close.screen(all=T)
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
cf::cf(TestFunctions::banana,bar=T)
screen()
close.screen(all=T)
split.screen(c(1,3))
screen(2)
cf::cf(TestFunctions::banana,bar=T)
screen()
split.screen()
close.screen(all=T)
hist(rnorm(70))
